{"version":3,"sources":["components/Wheel/Wheel.js","components/Popup/Popup.js","App.js","reportWebVitals.js","index.js"],"names":["Wheel","props","spinHandler","bind","this","selectedItem","Math","floor","random","items","length","setSelectedItem","setTimeout","setShowPopup","setData","data","webClient","ip","time","Date","toLocaleString","spin_result_index","postData","wheelvars","className","style","color","icon","faMapMarker","onClick","map","item","index","faCircle","React","Component","Popup","textMsg","faFrown","faTimes","App","useState","showPopup","setIp","useEffect","getIp","a","fetch","method","then","response","json","IP","console","log","headers","body","JSON","stringify","faSquare","faWifi","faChevronLeft","target","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c9d4256.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faMapMarker, faCircle } from '@fortawesome/free-solid-svg-icons'\n\nimport './Wheel.css';\n\nexport default class Wheel extends React.Component {\n  constructor(props) {\n    super(props);\n    this.spinHandler = this.spinHandler.bind(this);\n  }\n\n  spinHandler() {\n    if (this.props.selectedItem === null) {\n\n      const selectedItem = Math.floor(Math.random() * this.props.items.length); // randowmly selecting a item\n\n      this.props.setSelectedItem(selectedItem); //setting selected item in state\n\n      setTimeout(()=>{this.props.setShowPopup(true)}, 4300) //popup will show up 0.3s after the wheel stops rotating\n\n      this.props.setData({...this.props.data, webClient : this.props.ip, time : new Date().toLocaleString(), spin_result_index : selectedItem});\n      this.props.postData(this.props.data, this.props.setData); //posting data to spreadsheet\n\n    } else {    \n\n      this.props.setSelectedItem(null)\n      setTimeout(this.spinHandler, 500);\n\n    }\n  }\n\n  render() {\n    const { selectedItem,items } = this.props;\n\n    const wheelvars = {\n      '--nb-item': items.length,\n      '--selected-item': selectedItem,\n    };\n\n    return (  \n      <div className=\"wheel-main\">\n      <div className=\"wheel-sub\">\n\n          <div className={`selector ${selectedItem !== null ? 'spinning' : ''}`} style={wheelvars}>\n\n          <FontAwesomeIcon className=\"icon\" color=\"#FFDDA1\" icon={faMapMarker}/>\n\n          </div>\n\n        <div className=\"wheel-container\">\n\n          <div className={`wheel ${selectedItem !== null ? 'spinning' : ''}`} style={wheelvars} onClick={this.spinHandler}>\n\n            <h2 className=\"spin\">Spin</h2>\n\n            {items.map((item, index) => (\n\n              <div>\n                <div className=\"dot-container\" style={{ '--item-nb': index }}> \n\n                  <div className=\"dot-rotate\">\n\n                    <FontAwesomeIcon className=\"dot\" color=\"#FFDDA1\" icon={faCircle}/>\n                    <FontAwesomeIcon className=\"dot\" color=\"#FFDDA1\" icon={faCircle}/>\n\n                  </div>\n                \n                </div>\n                <div className=\"wheel-item\" key={index} style={{ '--item-nb': index }}>\n                  \n                  <div className=\"text\">{item}</div>\n                  \n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      </div>  \n    );\n  }\n}\n\n// import React from 'react';\n\n// import './Wheel.css';\n\n// export default class Wheel extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       selectedItem: null,\n//     };\n//     this.spinHandler = this.spinHandler.bind(this);\n//   }\n\n//   spinHandler() {\n//     if (this.state.selectedItem === null) {\n//       const selectedItem = Math.floor(Math.random() * this.props.items.length);\n//       this.setState({ selectedItem });\n//     } else {n//       this.setState({ selectedItem: null });\n//       setTimeout(this.spinHandler, 500);\n//     }\n//   }\n\n//   render() {\n//     const { selectedItem } = this.state;\n//     const { items } = this.props;\n\n//     const wheelVars = {\n//       '--nb-item': items.length,\n//       '--selected-item': selectedItem,\n//     };\n//     const spinning = selectedItem !== null ? 'spinning' : '';\n\n//     return (\n//       <div className=\"wheel-container\">\n//         <div className={`wheel ${spinning}`} style={wheelVars} onClick={this.spinHandler}>\n//           {items.map((item, index) => (\n//             <div className=\"wheel-item\" key={index} style={{ '--item-nb': index }}>\n//               {item}\n//             </div>\n//           ))}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n","import React from 'react'\nimport './Popup.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes, faFrown } from '@fortawesome/free-solid-svg-icons'\n\nexport default function Popup({selectedItem, setShowPopup}) {\n    const textMsg = [<p>Yay! You got â‚¹20 ðŸ’¸</p>, <p>Hurray! You doubled your savings.</p>, <p>Yay! You got â‚¹50 ðŸ’¸</p>,\n                     <p>Yay! Your savings increased by 50%.</p>, <p>Yay! You got â‚¹50 ðŸ’¸</p>, <p>Hurray! You doubled your savings.</p>,\n                     <p>Kaching! You got â‚¹100 CashbackðŸ’¸</p>, <p> Better luck next time <FontAwesomeIcon icon={faFrown}/> </p>]\n    return (\n        <div className=\"popup-container\">\n            <div className=\"popup-sub\">\n                {textMsg[selectedItem]}\n                <button className=\"close-btn\" onClick={()=> {setShowPopup(false)}}>Close <FontAwesomeIcon icon={faTimes}/></button>\n            </div>\n        </div>\n    )\n}\n","import './App.css';\nimport {useState, useEffect} from 'react'\nimport Wheel from './components/Wheel/Wheel'\nimport Popup from './components/Popup/Popup'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faWifi,faSquare, faCircle, faChevronLeft } from '@fortawesome/free-solid-svg-icons'\n\nfunction App() {\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [showPopup, setShowPopup] = useState(false);\n  const [ip, setIp] = useState('');\n  const [data, setData] = useState({\n    webClient : '',\n    time : '',\n    spin_result_index: ''\n  });\n\n  useEffect(()=> {\n\n   getIp();\n\n  },[])\n\n  //This fuction gets the remote ip address of the client\n  const getIp = async () => {\n    try {\n      const res = await fetch(\"https://geolocation-db.com/json/f6b71820-809c-11eb-95f1-01287ca1dfdd\", {method: 'GET'}).then(response => response.json()).then(data => {setIp(data.IP)});\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  // This fuction posts data to google spreadsheet\n\n  const postData = async (data, setData) => {\n    try {\n      const response = await fetch(\"https://v1.nocodeapi.com/supratimmalakar/google_sheets/RWrQzHmbPgCtDclx?tabId=Sheet1\", {\n        method : \"POST\",\n        headers : {\n          'Content-Type' : 'application/json'\n        }, \n        body:JSON.stringify([\n          [data.webClient, data.time, data.spin_result_index]\n        ]),\n      }\n    );\n    await response.json();\n    setData({...data,webClient : '', time: '', spin_result_index: ''})\n    } catch(err) {\n      console.log(err)\n    }\n  }\n\n  // Items to be displayed in the wheel\n  const items = \n    [<p><b>â‚¹20</b> ðŸ’¸</p>, \n    \n    <p><b>2X</b><br/> Savings</p>, \n\n    <p><b>â‚¹50</b> ðŸ’¸</p>, \n\n    <p><b>1.5X</b><br/> Savings</p>, \n\n    <p><b>â‚¹50</b> ðŸ’¸</p>, \n\n    <p><b>2X</b><br/> Savings</p>, \n\n    <p><b>â‚¹100</b> <br/> Cashback </p>, \n\n    <p>Better luck <br/>\n    next time!</p>\n    ]\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"view-container\">\n      {showPopup ? <div className=\"popup-main\">\n      <Popup\n        selectedItem={selectedItem}\n        setShowPopup={setShowPopup}/>\n      </div> : \"\"}\n\n      <div className=\"top-bar\">\n        <div>\n          <FontAwesomeIcon className=\"top-icon\" icon={faSquare}/>\n          <FontAwesomeIcon className=\"top-icon\" icon={faCircle}/>\n          <FontAwesomeIcon className=\"top-icon wifi-icon\" icon={faWifi}/>\n        </div>\n      </div>\n      <div className=\"rewards-btn\">\n      <FontAwesomeIcon className=\"back-icon\" icon={faChevronLeft}/>\n      <p>Your rewards</p>\n      </div>\n\n      <Wheel \n        items={items}\n        selectedItem={selectedItem}\n        setSelectedItem={setSelectedItem}\n        setShowPopup={setShowPopup}\n        data={data}\n        setData={setData}\n        postData={postData}\n        ip={ip}\n      />\n      <div className=\"spin-msg-box\">\n        <h1>Spin the wheel now to <br/> get rewarded</h1>\n        <p>Tap on Spin or rotate the wheel anti-clockwise and release to start spinning </p>\n      </div>\n      <div className=\"help\">\n        <p><b>Have a question? <a target=\"_blank\" href=\"https://fampay.in/\">Get Help</a></b></p>\n      </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}